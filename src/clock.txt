import React, { useEffect, useRef, useState } from "react";
import "./App.css";

function App({ onChange }) {
  const hours12 = [
    { t: 12, b: 6, r: 0 },
    { t: 1, b: 7, r: 1 },
    { t: 2, b: 8, r: 2 },
    { t: 3, b: 9, r: 3 },
    { t: 4, b: 10, r: 4 },
    { t: 5, b: 11, r: 5 },
  ];

  const hours24 = [
    { t: 0, b: 18, r: 0 },
    { t: 13, b: 19, r: 1 },
    { t: 14, b: 20, r: 2 },
    { t: 15, b: 21, r: 3 },
    { t: 16, b: 22, r: 4 },
    { t: 17, b: 23, r: 5 },
  ];

  const minutes = [
    { t: 0, r: 0, b: 30 },
    { t: 1, r: 1, b: 31 },
    { t: 2, r: 2, b: 32 },
    { t: 3, r: 3, b: 33 },
    { t: 4, r: 4, b: 34 },
    { t: 5, r: 5, b: 35 },
    { t: 6, r: 6, b: 36 },
    { t: 7, r: 7, b: 37 },
    { t: 8, r: 8, b: 38 },
    { t: 9, r: 9, b: 39 },
    { t: 10, r: 10, b: 40 },
    { t: 11, r: 11, b: 41 },
    { t: 12, r: 12, b: 42 },
    { t: 13, r: 13, b: 43 },
    { t: 14, r: 14, b: 44 },
    { t: 15, r: 15, b: 45 },
    { t: 16, r: 16, b: 46 },
    { t: 17, r: 17, b: 47 },
    { t: 18, r: 18, b: 48 },
    { t: 19, r: 19, b: 49 },
    { t: 20, r: 20, b: 50 },
    { t: 21, r: 21, b: 51 },
    { t: 22, r: 22, b: 52 },
    { t: 23, r: 23, b: 53 },
    { t: 24, r: 24, b: 54 },
    { t: 25, r: 25, b: 55 },
    { t: 26, r: 26, b: 56 },
    { t: 27, r: 27, b: 57 },
    { t: 28, r: 28, b: 58 },
    { t: 29, r: 29, b: 59 },
  ];

  const [hour, setHour] = useState(12);
  const [minute, setMinute] = useState(0);
  const [clickHour, setClickHour] = useState(false);
  const [num, setNum] = useState(false);
  const [isClick, setIsClick] = useState(false);
  const [isShowModal, setIsShowModal] = useState(false);
  const [clock, setClock] = useState({ m: 0, h: 0 });
  const ref = useRef();

  document.addEventListener(
    "click",
    (e) => {
      if (!ref.current?.contains(e.target)) setIsShowModal(false);
    },
    { capture: true }
  );

  useEffect(() => {
    if (clickHour) {
      setTimeout(() => {
        setNum(true);
      }, 500);
    }
  }, [num, clickHour]);

  return (
    <>
      <input
        className="input"
        type="text"
        onClick={() => {
          setIsShowModal(true);
        }}
        value={` ${String(clock.h).padStart(2, 0)}:${String(clock.m).padStart(
          2,
          0
        )}`}
      />
      {isShowModal && (
        <div className="container" ref={ref}>
          <p className="paragraph">ساعت ورود</p>
          <div className="clock-digital">
            <button
              type="button"
              className={`item-digital ${!num && "active"}`}
              onClick={() => {
                setNum(false);
                setClickHour(false);
              }}
              disabled={!num}
            >
              {String(hour).padStart(2, 0)}
            </button>
            <p className="colom-digital">:</p>

            <button
              type="button"
              className={`item-digital ${num && "active"}`}
              onClick={() => {
                setNum(true);
                setClickHour(true);
              }}
              disabled={num}
            >
              {String(minute).padStart(2, 0)}
            </button>
          </div>
          <div
            className="clock"
            onMouseLeave={() => setIsClick(false)}
            onMouseUp={() => setIsClick(false)}
          >
            {(num ? minutes : hours12).map((item) => (
              <div
                key={item.r}
                className="hh"
                style={{
                  height: "100%",
                  transform: `translateY(-50%) rotate(${
                    (num ? 6 : 30) * item.r
                  }deg)`,
                }}
              >
                <h3
                  className={`hour ${num && "isEmity"}  ${
                    item.t < 9 && "isOne"
                  }  ${
                    num
                      ? item.t === minute
                        ? "active"
                        : ""
                      : item.t === hour
                      ? "active"
                      : ""
                  }`}
                  style={{
                    color: "#000",
                    transform: `rotate(${(num ? 6 : 30) * -item.r}deg)`,
                    margin: `${4}px 0`,
                  }}
                  onMouseDown={() => {
                    setIsClick(true);
                  }}
                  onMouseUp={() => {
                    setIsClick(false);
                    setClickHour(true);
                  }}
                  onMouseOver={() => {
                    if (isClick) {
                      num ? setMinute(item.t) : setHour(item.t);
                    }
                  }}
                  onClick={() => {
                    setClickHour(true);
                    num ? setMinute(item.t) : setHour(item.t);
                  }}
                >
                  {num ? item.t % 5 === 0 && item.t : item.t}
                </h3>

                <h3
                  className={`hour ${num && "isEmity"}  ${
                    item.t < 9 && "isOne"
                  }  ${
                    num
                      ? item.b === minute
                        ? "active"
                        : ""
                      : item.b === hour
                      ? "active"
                      : ""
                  }`}
                  style={{
                    color: "#000",
                    transform: `rotate(${(num ? 6 : 30) * -item.r}deg)`,
                    margin: `${4}px 0`,
                  }}
                  onMouseDown={() => {
                    setIsClick(true);
                  }}
                  onMouseUp={() => {
                    setIsClick(false);
                    setClickHour(true);
                  }}
                  onMouseOver={() => {
                    if (isClick) {
                      num ? setMinute(item.b) : setHour(item.b);
                    }
                  }}
                  onClick={() => {
                    setClickHour(true);
                    num ? setMinute(item.b) : setHour(item.b);
                  }}
                >
                  {num ? item.b % 5 === 0 && item.b : item.b}
                </h3>
              </div>
            ))}
            {/* 24 */}
            {!num &&
              hours24.map((item) => (
                <div
                  className="hh"
                  key={item.r}
                  style={{
                    height: "75%",
                    transform: `translateY(-50%) rotate(${30 * item.r}deg)`,
                  }}
                >
                  <h3
                    className={`hour ${num && "isEmity"}  ${
                      item.t < 9 && "isOne"
                    }  ${
                      num
                        ? item.t === minute
                          ? "active"
                          : ""
                        : item.t === hour
                        ? "active"
                        : ""
                    }`}
                    style={{
                      color: "#000",
                      transform: `rotate(${30 * -item.r}deg)`,
                      margin: `${4}px 0`,
                    }}
                    onMouseDown={() => {
                      setIsClick(true);
                    }}
                    onMouseUp={() => {
                      setIsClick(false);
                      setClickHour(true);
                    }}
                    onMouseOver={() => {
                      if (isClick) {
                        num ? setMinute(item.t) : setHour(item.t);
                      }
                    }}
                    onClick={() => {
                      setClickHour(true);
                      num ? setMinute(item.t) : setHour(item.t);
                    }}
                  >
                    {num ? item.t % 5 === 0 && item.t : item.t}
                  </h3>

                  <h3
                    className={`hour ${num && "isEmity"}  ${
                      item.b < 9 && "isOne"
                    }  ${
                      num
                        ? item.b === minute
                          ? "active"
                          : ""
                        : item.b === hour
                        ? "active"
                        : ""
                    }`}
                    style={{
                      color: "#000",
                      transform: `rotate(${30 * -item.r}deg)`,
                      margin: `${4}px 0`,
                    }}
                    onMouseDown={() => {
                      setIsClick(true);
                    }}
                    onMouseUp={() => {
                      setIsClick(false);
                      setClickHour(true);
                    }}
                    onMouseOver={() => {
                      if (isClick) {
                        num ? setMinute(item.b) : setHour(item.b);
                      }
                    }}
                    onClick={() => {
                      setClickHour(true);
                      num ? setMinute(item.b) : setHour(item.b);
                    }}
                  >
                    {num ? item.b % 5 === 0 && item.b : item.b}
                  </h3>
                </div>
              ))}

            <div
              className="head"
              style={{
                transform: `rotate(${30 * (num ? minute / 5 : hour)}deg)`,
                color: "#FCE376",
                height: (num && minute % 5 === 0 ? true : false)
                  ? "37%"
                  : (!num && hour > 12 ? true : false)
                  ? "24%"
                  : "43%",
              }}
            />
            <div
              className="center"
              style={{
                width: `${8}px`,
                height: `${8}px`,
                backgroundColor: "#FFD61F",
              }}
            />
          </div>
          <div className="clock-digital is-sub">
            <button
              type="button"
              className="item-digital is-cancel btn-sub"
              onClick={() => {
                setIsShowModal(false);
              }}
            >
              پاک کردن
            </button>

            <button
              type="button"
              className="item-digital btn-sub active"
              onClick={() => {
                setClock({ m: minute, h: hour });
                setIsShowModal(false);
                onChange({ m: minute, h: hour });
              }}
            >
              ثبت
            </button>
          </div>
        </div>
      )}
    </>
  );
}

export default App;
